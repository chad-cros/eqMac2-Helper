<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string># option to display notifications for every song changeset answer to choose from list {"Yes", "No"} with prompt "Turn on notifications?" default items {"No"}set notifications to answer is {"Yes"}delay 1# option to interrupt midsong to restart eqMacset answer to choose from list {"Yes", "No"} with prompt "Interrupt mid song?" default items {"Yes"}set interrupts to answer is {"Yes"}# Tell user that eqMacHelper is running with the given configdelay 1display notification "Notifications: " &amp; notifications &amp; "
Interruptions: " &amp; interrupts with title "Now starting eqMac Helper..."#Loop to continuously reset eqMac hererepeat	#--	# If Spotify is opened, then set the track_name / artist / etc here, else kill the script	#--	if application "Spotify" is running then		tell application "Spotify"			if player state is stopped then				exit repeat			else				set track_artist to artist of current track				set track_name to name of current track				set track_duration to round ((duration of current track) / 1000) rounding up				set seconds_played to round (player position / 1) rounding down			end if		end tell	else		exit repeat	end if			#--	# Display notification of current track if notificaitons are on	#--	if notifications then		display notification "is now playing on Spotify" with title track_name subtitle track_artist	end if			#--	# Keep mac from sleeping for the duration of the song here	#	FIXME: This doesn't work	#--	# do shell script ("caffeinate -dit " &amp; (track_duration - seconds_played + 1))			#--	# Wait until track is finished playing here	#--	delay (track_duration - seconds_played)			#--	# This handles the case when the song should be done playing. It again checks if spotify is running, and exits the loop if it's not.	#--	if application "Spotify" is running then		tell application "Spotify"			if player state is stopped then				exit repeat			else				set current_track to name of current track				set track_duration to round ((duration of current track) / 1000) rounding up				set seconds_played to round (player position / 1) rounding down			end if		end tell		# -- Check if the song playing is still the same song. If it is, move on to killing eqMac		# -- If not, check if the user enabled interrupts. If they		if current_track is track_name then			delay 0.1		else			if interrupts then				delay 0.1			else				# do shell script ("caffeinate -dit " &amp; (track_duration - seconds_played + 1))				delay (track_duration - seconds_played)			end if		end if	end if			#--	# Restarts eqMac if it was running, launches it if it wasn't	#--	if application "eqMac2" is running then		if notifications then			display notification "restarting eqMac2…" with title "eqMac2 Helper"		end if		tell application "Spotify" to pause		tell application "eqMac2" to quit		delay 0.5		tell application "eqMac2" to activate		tell application "Spotify" to play	else		if notifications then			display notification "starting eqMac2…" with title "eqMac2 Helper"		end if		tell application "Spotify" to pause		tell application "eqMac2" to activate		tell application "Spotify" to play	end ifend repeat</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>81E83E3E-BDE0-4D6D-8623-6B72BBA9C5FE</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>53D53220-EFCA-4366-AA64-44BAEFFE4749</string>
				<key>UUID</key>
				<string>7EB53095-0BDA-41F1-AA6F-C8302C6FD5F3</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>311.500000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarAudioOutputVolumeHigh</string>
		<key>useAutomaticInputType</key>
		<integer>1</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
